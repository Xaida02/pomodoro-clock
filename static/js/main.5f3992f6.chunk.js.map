{"version":3,"sources":["App.js","index.js"],"names":["App","useState","breakLength","setBreakLength","sessionLength","setSessionLength","timeLeft","setTimeLeft","sessionType","setSessionType","start","setStart","audio","document","getElementById","timeOut","setTimeout","time","handleLength","e","target","className","handleSession","changeTimer","pause","currentTime","play","useEffect","id","disabled","onClick","minutes","Math","floor","seconds","formattedMinutes","formattedSeconds","timeDisplay","clearTimeout","src","ReactDOM","render"],"mappings":"kLA+IeA,EAvIH,WAER,IAIA,EAAsCC,mBAJZ,GAI1B,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,mBAJd,IAI5B,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAgCJ,mBAJH,MAI7B,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAsCN,mBAAS,WAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA0BR,oBAAS,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACMC,EAAQC,SAASC,eAAe,QAGhCC,EAAUC,YAAW,WACpBV,IAAsB,IAAVI,GACXH,GAAY,SAACU,GAAD,OAAUA,EAAM,CAAhB,GAEpB,GAAE,KAYGC,EAAe,SAACC,GACS,4BAAvBA,EAAEC,OAAOC,UACLnB,EAAc,GACbC,EAAeD,EAAc,GAI9BA,EAAc,IACjBC,EAAeD,EAAc,EAGrC,EAEKoB,EAAgB,SAACH,GACQ,4BAAvBA,EAAEC,OAAOC,UACLjB,EAAgB,IACfC,EAAiBD,EAAgB,GACjCG,GAAY,SAACU,GAAD,OAAUA,EAAO,EAAjB,KAIbb,EAAgB,KACfC,EAAiBD,EAAgB,GACjCG,GAAY,SAACU,GAAD,OAAUA,EAAO,EAAjB,IAGxB,EAEKM,EAAc,WACZjB,GAA4B,YAAhBE,EAKNF,GAA4B,UAAhBE,IAClBD,EAA4B,GAAhBH,GACZK,EAAe,WACfG,EAAMY,QACNZ,EAAMa,YAAc,IARpBlB,EAA0B,GAAdL,GACZO,EAAe,SACfG,EAAMc,OAQb,EAmCF,OALCC,qBAAU,WACTJ,GACA,GAAE,CAACb,EAAOJ,EAAUS,IAIhB,gCACI,sBAAKM,UAAU,iBAAf,UACI,sBAAKO,GAAG,cAAR,UACI,8CACA,oBAAIA,GAAG,eAAP,SAAuB1B,IACvB,mBAAG2B,SAAUnB,EAAOoB,QAASZ,EAAcU,GAAG,kBAAkBP,UAAU,4BAC1E,mBAAGQ,SAAUnB,EAAOoB,QAASZ,EAAcU,GAAG,kBAAkBP,UAAU,6BAE9E,sBAAKO,GAAG,gBAAR,UACI,gDACA,oBAAIA,GAAG,iBAAP,SAAyBxB,IACzB,mBAAGyB,SAAUnB,EAAOoB,QAASR,EAAeM,GAAG,oBAAoBP,UAAU,4BAC7E,mBAAGQ,SAAUnB,EAAOoB,QAASR,EAAeM,GAAG,oBAAoBP,UAAU,gCAGrF,sBAAKO,GAAG,cAAcP,UAAU,UAAhC,UACI,6BAAKb,IACL,oBAAIoB,GAAG,YAAP,SAvGQ,WAChB,IAAMG,EAAUC,KAAKC,MAAM3B,EAAW,IAChC4B,EAAU5B,EAAqB,GAAVyB,EACrBI,EAAoBJ,EAAU,GAAV,WAAoBA,GAAYA,EACpDK,EAAoBF,EAAU,GAAV,WAAoBA,GAAYA,EAE1D,MADW,UAAMC,EAAN,YAA0BC,EAExC,CAgG+BC,QAExB,sBAAKhB,UAAU,aAAf,UACI,mBAAGS,QA1CI,WACfQ,aAAavB,GACbJ,GAAUD,EACd,EAuCqCkB,GAAG,aAAaP,UAAU,yBAEnD,mBAAGS,QAvCE,WACbQ,aAAavB,GACbJ,GAAS,GACTR,EA1FsB,GA2FtBE,EA1FwB,IA2FxBE,EA1FyB,MA2FzBE,EAAe,WACfG,EAAMY,QACNZ,EAAMa,YAAc,CACxB,EA8BmCG,GAAG,QAAQP,UAAU,yBAC5C,uBAAOkB,IAAI,4GAA4GX,GAAG,cAIzI,ECzIDY,IAASC,OAAO,cAAC,EAAD,IAAS5B,SAASC,eAAe,Q","file":"static/js/main.5f3992f6.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\n// audio \"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n\n\n\nconst App = () => {\n\n    const breakInitialState = 5;\n    const sessionInitialState = 25;\n    const timeLeftInitialState = 1500;\n\n    const [breakLength, setBreakLength] = useState(breakInitialState);\n    const [sessionLength, setSessionLength] = useState(sessionInitialState);\n    const [timeLeft, setTimeLeft] = useState(timeLeftInitialState);\n    const [sessionType, setSessionType] = useState(\"SESSION\");\n    const [start, setStart] = useState(false);\n    const audio = document.getElementById(\"beep\");\n    \n\n    const timeOut = setTimeout(() => {\n        if(timeLeft && start === true) {\n            setTimeLeft((time) => time -1 )\n        }\n   }, 1000)\n\n    const timeDisplay = () => {\n        const minutes = Math.floor(timeLeft / 60);\n        const seconds = timeLeft - minutes * 60;\n        const formattedMinutes =  minutes < 10 ?  `0${minutes}` : minutes;\n        const formattedSeconds =  seconds < 10 ?  `0${seconds}` : seconds;\n        let product = `${formattedMinutes}:${formattedSeconds}`;\n        return product;\n    }\n\n\n   const handleLength = (e) => {\n        if(e.target.className === \"fas fa-arrow-down arrow\") {\n            if(breakLength > 1) {\n                setBreakLength(breakLength - 1)\n            }\n        }\n        else {\n            if(breakLength < 60) {\n            setBreakLength(breakLength + 1)\n            }\n        }\n   }\n\n   const handleSession = (e) => {\n        if(e.target.className === \"fas fa-arrow-down arrow\") {\n            if(sessionLength > 1) {\n                setSessionLength(sessionLength - 1)\n                setTimeLeft((time) => time - 60);\n            }\n        }\n        else {\n            if(sessionLength < 60) {\n                setSessionLength(sessionLength + 1)\n                setTimeLeft((time) => time + 60);\n                }\n        }\n   }\n\n   const changeTimer = () => {\n       if(!timeLeft && sessionType === \"SESSION\") {\n           setTimeLeft(breakLength * 60);\n           setSessionType(\"BREAK\");\n           audio.play()\n       }\n       else if (!timeLeft && sessionType === \"BREAK\") {\n           setTimeLeft(sessionLength * 60);\n           setSessionType(\"SESSION\");\n           audio.pause();\n           audio.currentTime = 0;\n       }\n   };\n\n   const clock = () => {\n       if(start){\n           timeOut()\n           changeTimer()\n       }\n       else {\n           clearTimeout(timeOut)\n       }\n   }\n\n\n\n   const togglePause = () => {\n        clearTimeout(timeOut)\n        setStart(!start)\n   }\n\n   const redoClock = () => {\n        clearTimeout(timeOut)\n        setStart(false);\n        setBreakLength(breakInitialState);\n        setSessionLength(sessionInitialState);\n        setTimeLeft(timeLeftInitialState);\n        setSessionType(\"SESSION\");\n        audio.pause()\n        audio.currentTime = 0;\n   }\n\n   useEffect(() => {\n    changeTimer()\n   }, [start, timeLeft, timeOut])\n\n\n  return (\n        <div>\n            <div className=\"main-container\">\n                <div id=\"break-label\"> \n                    <h2>Break Length</h2>\n                    <h2 id=\"break-length\">{breakLength}</h2>\n                    <i disabled={start} onClick={handleLength} id=\"break-decrement\" className=\"fas fa-arrow-down arrow\"></i>\n                    <i disabled={start} onClick={handleLength} id=\"break-increment\" className=\"fas fa-arrow-up arrow\"></i>\n                </div>\n                <div id=\"session-label\">\n                    <h2>Session Length</h2>\n                    <h2 id=\"session-length\">{sessionLength}</h2>\n                    <i disabled={start} onClick={handleSession} id=\"session-decrement\" className=\"fas fa-arrow-down arrow\"></i>\n                    <i disabled={start} onClick={handleSession} id=\"session-increment\" className=\"fas fa-arrow-up arrow\"></i>\n                </div>\n            </div>\n            <div id=\"timer-label\" className='display'>\n                <h2>{sessionType}</h2>\n                <h1 id=\"time-left\">{timeDisplay()}</h1>\n            </div>\n            <div className=\"clock-btns\">\n                <i onClick={togglePause} id=\"start_stop\" className='fa fa-play clock-btn'></i>\n                {/* <i onClick={togglePause} className='fa fa-pause clock-btn'></i> */}\n                <i onClick={redoClock} id=\"reset\" className='fa fa-undo clock-btn'></i>\n                <audio src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\" id=\"beep\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// const root = ReactDOM.createRoot(document.getElementById('root'));\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}